apply plugin: 'com.android.application'


def buildTime() {
    def date = new Date()
    def formatterDate = date.format('yyyyMMdd')
    return formatterDate
}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.pactera.hotupdate"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        // 开启multidex
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //设置支持的SO库架构
            abiFilters /*'armeabi' , 'x86', */'armeabi-v7a', /*'x86_64', */'arm64-v8a'
        }

    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    signingConfigs {
        release {
            storeFile file('D:\\Project\\Android\\hotUpdate\\app\\keystore.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'android'
        }
        debug {
            storeFile file('D:\\Project\\Android\\hotUpdate\\app\\keystore.jks')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'android'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
//            shrinkResources true
            signingConfig signingConfigs.release

//            applicationVariants.all { variant ->
//                variant.outputs.all {
//                    outputFileName = "hot_${variant.versionCode}_v${variant.versionName}_${buildTime()}.apk"
//                }
//            }
        }

        debug {
            //  配置
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.debug

//            applicationVariants.all { variant ->
//                variant.outputs.all {
//                    outputFileName = "hot_${variant.versionCode}_v${variant.versionName}_${buildTime()}.apk"
//                }
//            }

        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation "androidx.multidex:multidex:2.0.1"

    // 远程依赖集成方式（推荐）
    implementation "com.tencent.bugly:crashreport_upgrade:1.4.1"
    implementation 'com.tencent.bugly:nativecrashreport:3.6.0.1'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

}
// 依赖插件脚本
apply from: 'tinker-support.gradle'